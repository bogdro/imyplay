2019-11-24	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 1.2
	  This is an important bugfix release. No new features are introduced.
	  Important fixes in SDL, PortAudio and JACK output system support.
	  Fixes in GStreamer and AO output system support. Compatibility and
	  portability improvements. Updated copyright and documentation. Other
	  small fixes.
	* configure.ac: Added checking for the -Wno-nonnull-compare compiler
	  flag to avoid warnings about defensive programming code. Added
	  checking for the -Wchkp, -Wformat-overflow=2, -Wrestrict
	  -Wduplicated-cond, -Woverlength-strings compiler warning options.
	  Added checking for the -g compiler option for the debuginfo RPM
	  package build to work by default. Stop enabling -Wpadded, most
	  warnings of this type are not useful in this case. Check for the
	  jack_get_version_string() function.
	* INSTALL-imyplay.txt: renamed from "INSTALL", overwritten by new
	  autotools 
	* Makefile.am: stop using 'tar --delete', for systems where GNU tar is
	  not installed or not the default
	* src/imyparse.c (imyp_show_token_error, imyp_play_file): a single
	  function for displaying "unexpected/unknown token" errors
	* src/imyputil.c (imyp_generate_filename): if the filename doesn't
	  contain ".imy", the requested extension is appended, but only if it
	  is not present yet. This prevents creating files like "name.raw.raw"
	* src/imyp_sig.c (print_signal_error): fix output buffer size
	* src/imyputil.c (imyp_generate_samples, imyp_generate_filename):
	  change variable types to avoid compiler warnings
	* src/imyputil.c (imyp_generate_samples): don't check if samp_rate is
	  negative - it can't be (warning generated by "cppcheck")
	* src/imyp_als.c (imyp_alsa_play_tune): change variable type and
	  return value to avoid compiler warnings
	* src/imyp_oss.c (imyp_oss_play_tune): change variable type and
	  return value to avoid compiler warnings
	* src/imyp_oss.c (imyp_oss_init): make variable name more proper
	* src/imyp_ao.c (imyp_ao_init): fixed reading the provided device ID,
	  make variable name more proper
	* src/imyp_gst.c (imyp_gst_init): if the "autoaudiosink" output
	  factory is unavailable, use "alsasink". This should make IMYplay
	  work on newer systems by default (not requiring to pass options)
	* src/imyp_jck.c (imyp_jack_backend_data, imyp_jack_fill_buffer):
	  change variable type to avoid compiler warnings
	* src/imyp_jck.c (imyp_jack_fill_buffer): check for remaining samples
	  to play at the beginning, for better thread synchronisation. Simply
	  re-write the pregenerated samples to the output buffer instead of
	  generating them here. This avoids buffer underruns and JACK errors
	* src/imyp_jck.c (imyp_jack_play_tune): check for valid input values,
	  check for signals during playback, set the number of samples in one
	  operation, for better thread synchronisation. Pregenerate all the
	  samples here instead of the callback, to reduce callback time. The
	  callback simply re-writes the samples to the JACK output buffer now
	* src/imyp_jck.c (imyp_jack_init): set the maximum possible buffer size
	* src/imyp_jck.c (imyp_jack_version): show the JACK version, if the
	  function jack_get_version_string() is available
	* src/imyp_spk.c (imyp_spkr_init): corrected the return values
	* src/imyp_sdl.c (imyp_sdl_init): changed the number of samples to 
	  match the sampling frequency, added enabling the timer subsystem,
	  locking the audio until the data is filled, small rearrangements
	* src/imyp_sdl.c (imyp_sdl_play_tune): added locking and unlocking the
	  audio subsystem while setting the input data. Waiting until all
	  samples are processed
	* src/imyp_sdl.c (imyp_sdl_fill_buffer): correctly calculate the
	  number of samples to put in the buffer, change variable types to
	  avoid compiler warnings
	* src/imyp_sdl.c (imyp_sdl_close): un-lock the playing thread to close
	  it properly
	* src/imyp_por.c (imyp_portaudio_play_tune): check for signals during
	  playback, change one error return value to be distinguishable.
	  Synchronise with the playing thread using the number of remaining
	  samples, like in SDL and JACK
	* src/imyp_por.c (imyp_portaudio_fill_buffer): simplify the loop which
	  is initially zeroing the buffer. Added a marker that the callback
	  should be called just one more time, to make time to play the note
	* src/imyp_por.c (imyp_portaudio_init): if parsing the user-provided
	  frequency fails, use 11025Hz, instead of 44100Hz, which can crash
	* src/imyp_pul.c (imyp_pulse_init): make variable name more proper
	* src/imyparsf.l (imyp_play_file): display an error if the input file
	  can't be opened, correctly check for the current backend
	* README, doc/imyplay.txc, doc/imyplay.1: Added a note how to start
	  the JACK server manually, if needed. Updated links and compatible
	  systems, typo fixes
	* test/utiltest.c: added tests for the filename generation algorithm
	* po/LINGUAS, imyplay.spi: added the en@quot and en@boldquot
	  pseudo-translations.
	* imyplay.spi: made the spec file more portable (assuming that the
	  required macros are properly defined on the target systems) and
	  removed some rpmlint warnings and errors

2018-07-08	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 1.1
	  PortAudio output improvements. Small improvements in SDL & JACK
	  output. Fixed creating output file names. Small improvements in
	  the building mechanism. Added unit tests.
	* configure.ac: setting AC_LANG(C). Checking for the "check" library
	  for unit tests. Added AM_PROG_CC_C_O for compatibility.
	* src/imyparse.c: Removed some invalid comments
	* src/Makefile.am: changed deprecated INCLUDES to AM_CPPFLAGS
	* src/imyp_por.c (imyp_portaudio_play_tune): move output initialization
	  to imyp_portaudio_init and closing to imyp_portaudio_close. Now
	  initializing the stream just once and only calling start and stop
	  for each tone. Synchronous mode is easier to program, but either
	  crashes or reports underrun errors in the output device, so for now,
	  asynchronous mode will stay. Setting up the maximum number of frames
	  needed for the tone.
	* src/imyp_por.c (imyp_portaudio_fill_buffer): now filling just as
	  many frames as is needed for the tone (setting up the maximum number
	  of frames needed and decreasing it each time a buffer is filled).
	  This allows a bit finer control over the duration of the tone being
	  played. The output buffer is zeroed-out on each call before filling
	  it with data.
	* src/imyp_por.c (imyp_portaudio_init): initializing not only the
	  output backend, but also the playing stream.
	* src/imyp_por.c (imyp_portaudio_close): closing not only the output
	  backend, but also the playing stream.
	* src/imyp_sdl.c (imyp_sdl_fill_buffer): now filling just as
	  many frames as is needed for the tone (setting up the maximum number
	  of frames needed and decreasing it each time a buffer is filled).
	  This allows a bit finer control over the duration of the tone being
	  played. The output buffer is zeroed-out on each call before filling
	  it with data.
	* src/imyp_sdl.c (imyp_sdl_play_tune): setting up the maximum number
	  of frames needed for the tone.
	* src/imyp_jck.c (imyp_jack_fill_buffer): now filling just as
	  many frames as is needed for the tone (setting up the maximum number
	  of frames needed and decreasing it each time a buffer is filled).
	  This allows a bit finer control over the duration of the tone being
	  played. The output buffer is zeroed-out on each call before filling
	  it with data.
	* src/imyp_jck.c (imyp_jack_play_tune): setting up the maximum number
	  of frames needed for the tone.
	* src/imyparse.c (imyp_play_file): checking the volume values for
	  overflow.
	* src/imyparse.c (imyp_read_line): use a constant instead of
	  strlen (IMYP_MEL_END).
	* test: added unit tests for IMYplay, currently only for the
	  imyp_compare() and imyp_generate_filename() of src/imyputil.c
	* src/imyputil.c (imyp_generate_filename): if the filename doesn't
	  contain ".imy", the requested extension is appended. This prevents
	  overwriting input files.
	* doc/Makefile.am: noted why it's impossible to correctly remove the
	  generated imyplay.txi from the distribution. corrected man pages'
	  distribution settings.
	* src/imyp_sig.h, *.c, imyparsf.l: rename sig_recvd to imyp_sig_recvd
	* imyplay.spi: small improvements

2016-07-29	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 1.0
	  Improved sound output quality. Improved special (MIDI, FILE, EXEC)
	  output file generation and command-line parsing. Constant
	  calculations performed just once to improve sample generation time.
	  Other minor fixes and improvements.
	* src/imyputil.c (imyp_generate_samples): calculating constant values
	  just once per call or per loop iteration, where possible. Improved
	  samples' quality and code consistency in bytes vs. samples. Improved
	  partial buffer filling.
	* src/imyp_por.c (imyp_portaudio_play_tune): check for data == NULL
	* src/imyp_ao.c (imyp_ao_play_tune): change sample format to signed -
	  this fixes the strange sound problem
	* src/imyputil.c (imyp_generate_filename): a new function for creating
	  output filenames for the FILE and MIDI backends. This function
	  removes any ".imy" extension and appends the provided one instead.
	  If the filename doesn't contain ".imy", it is not changed.
	* src/imyp_fil.c (imyp_file_init): using the new filename generating
	  function. Fixed possible overwriting the input file.
	* src/imyp_mid.c (imyp_midi_init): using the new filename generating
	  function.
	* src/imyplay.c (main): don't pass MIDI-specific parameters during
	  initialization of the FILE and EXEC backends. Don't pass
	  FILE-specific parameters during initialization of the MIDI and EXEC
	  backends. Don't pass EXEC-specific parameters during initialization
	  of the MIDI and FILE backends. Prevent the other two special
	  (non-sound) backends from being initialized when any one of the
	  MIDI, EXEC or FILE backend is chosen. This fixes multiple files from
	  being created when they would be unused anyway. When getopt_long()
	  is not present and manual command-line parsing is used, also quit
	  when a required command-line argument is missing. Errors during
	  initialization of special outputs are now reflected in the exit
	  code as well.
	* src/imyp_jck.c (imyp_jack_fill_buffer): calculating constant values
	  just once per call, where possible.
	* src/imyp_exe.c (launch_program, imyp_put_value_as_*): separate functions
	  for putting values in the buffer. Making sure that the buffer won't
	  overflow. Conditionally compiling the code that checks the exit code
	  of the called program.
	* src/imyp_sig.c (imyp_set_sigh): simplified error display and return
	* src/imyp_all.c (imyp_all_init): setting the volume to the maximum
	* README, doc/imyplay.txc: added a note about which output options
	  override which
	* src/imyp_all.c (imyp_all_audiostream_init, imyp_all_play_tune): now
	  initializing the sound output stream to just exactly the required
	  buffer size
	* src/imyp_all.c (imyp_all_play_tune): filling the Allegro buffer to
	  just the size filled by imyp_generate_samples(). Filling as many
	  Allegro buffers as we get (filling in a loop now, instead of just
	  one time).
	* src/iparsers.c: removed duplicate definitions of IMYP_C and IMYP_A*.
	* src/imyplay.h: added missing declaration for "err_msg".
	* src/imyparsf.l: added casts for printing values
	* src/imyp_gst.c (imyp_gst_init): use variables instead of string
	  constants to match function prototypes

2014-11-23	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.9
	  Code cleanup, documentation updates. Corrected command-line parsing.
	  Corrected some backends' startup and shutdown. Corrected parsing
	  binary files. Fixed some memory leaks.
	* README, doc/imyplay.txc, INSTALL: added info that under DOS LFN
	  support can be enabled instead of renaming files required for
	  compiling.
	* doc/imyplay.txc, imyplay.spi: updated WWW addresses
	* src/*.{c,h}: renamed the PARAMS macro to IMYP_PARAMS
	* src/imyp_por.c (imyp_portaudio_play_tune), src/imyp_sdl.c
	  (imyp_sdl_play_tune), src/imyp_jck.c (imyp_jack_play_tune): removed
	  empty statements
	* src/imyparse.c (imyp_play_file): fixed variable casting, fixed
	  playing more than one file (resetting the parser state before each
	  file played)
	* src/imyp_por.c, src/imyp_sdl.c: removed unnecessary include of
	  math.h and unnecessary define of M_PI
	* src/imyp_exe.c: fixed #defines at the top
	* src/*.c: made the *_static structures really static (scope reduced)
	* src/imyplay.h: #undefining IMYP_ANSIC before redefinition, added
	  IMYP_HAVE_SELECT.
	* src/imyp_por.c, src/imyp_sdl.c, src/imyp_all.c, src/imyputil.c:
	  switched to using IMYP_HAVE_SELECT.
	* src/imyp_exe.c (launch_program): loop limit calculated just once.
	* src/imyputil.c (imyp_generate_samples): arguments to IMYP_MIN
	  evaluated just once.
	* src/imyparse.c, src/imyputil.c, src/imyparsf.l: moved IMYP_TOUPPER
	  and IMYP_IS_DIGIT to imyplay.h.
	* src/imyp_por.c, src/imyp_sdl.c: prefer to use the library-specific
	  pause function instead of select().
	* src/*.c: braces around conditionals
	* src/imypwrap.c (imyp_lib_init, imyp_pause, imyp_init_selected):
	  corrected non-ANSI declarations, cleaned up conditionals in
	  declarations
	* src/imypdos.asm: a common macro for leaving the function, comment
	  fixed
	* src/imyparse.c, src/iparsers.c, src/imyparsf.l: moved imyp_notes,
	  note-related defines and other common parsing-related declarations
	  to iparsers.c.
	* src/imyp_fil.c (imyp_file_close): corrected closing the file
	* src/imyp_mid.c (imyp_midi_init): moved filename null check higher,
	  fixed the IMYplay WWW address
	* src/imyp_fil.c (imyp_file_init), src/imyplay.c (main): allow the
	  raw file output to work with multiple input files
	* src/imyp_fil.c: added checking if the backend was enabled
	* src/imyplay.c (main): allow the MIDI output to work with multiple
	  input files
	* src/imyparsf.l: enabled skipping also binary data (control
	  characters and non-ASCII bytes) outside iMelody blocks. This way the
	  program will not hang when reading binary files.
	* src/imyp_oss.c (imyp_oss_init): now trying all possible combinations
	  of the format and sampling frequency before giving up
	* dosfiles.txt: added iparsers.c
	* src/imyp_all.c (imyp_all_init): fixed memory leak on error path
	* configure.ac: unconditional checking for select() and related
	  headers, checking for "flex" unconditionally (because it is required
	  by "make dist"), changed the FLEX conditional
	* src/imyparsf.l (imyp_play_file): fixed playing more than one file
	  (resetting the parser state before each file played)
	* src/imyparse.c (imyp_read_line, imyp_play_file): fixed variable
	  casting when fseeko and ftello are not present
	* Makefile.am: removed doc/imelody.txt from EXTRA_DIST (it is already
	  included in doc/Makefile.am), manually removing src/imyparsf.c
	  from the distribution (it is generated by the flex parser)

2013-04-02	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.8
	  Made the backends thread-safe (using allocated control structures
	  instead of static). Corrected PortAudio and SDL outputs.
	* configure.ac: checking for the -O3 compiler option
	* doc/imyplay.txc: added @dircategory and @direntry
	* src/imyplay.h: corrected DOS dependency of the PC-speaker backend
	* src/imyp_spk.c (imyp_spkr_close): disabling sound on close in DOS
	* src/imyp_mid.c (imyp_midi_init): updated the website address
	* src/imyputil.{c,h} (imyp_pause_select, imyp_put_text_stdout):
	  common general pause & text printing functions.
	* src/imyp_sdl.c: shortened the pauses between sound by opening the
	  audio just once, not for each note. Allow controlling the sample
	  rate and format.
	* src/imyp_ao.c (imyp_ao_init): shutting down in case of error
	* src/imyp_als.c (imyp_alsa_init): freeing resources in case of error
	* src/imyp_por.c: corrected sound generating by using a lower sampling
	  frequency, smaller buffer and managing the buffer properly. Allow
	  controlling the sample rate and format.
	* src/imyputil.{c,h} (imyp_generate_samples): made the general sample
	  generating function support a starting offset (for SDL and PortAudio)
	* src/imyp_por.c (imyp_portaudio_fill_buffer): converted to use the
	  general sampling generating function
	* src/imyp_sdl.c (imyp_sdl_fill_buffer): converted to use the
	  general sampling generating function
	* src/imyp_all.c: allow controlling the sample rate and format.
	* dosdist.bat: using sed to translate line endings, using a variable
	  for the version number, manually setting the timezone for ZIP (and
	  restoring the previous after compressing), using more optimization,
	  not including technical files in the "doc" subdirectory
	* README, doc/imyplay.txc, INSTALL, doc/imyplay.1: documentation update

2012-07-14	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.7
	  PC-speaker output support. Portability improvements. Code cleanup
	  (removed unnecessary includes and made other corrections for
	  various backends).
	* src/imyparsf.l: correctly freeing all memory after processing.
	* configure.ac: corrected the JACK, Pulseaudio, Portaudio, Libao,
	  OSS, ALSA, SDL and Allegro backends in the summary and in the
	  automake conditionals. The malloc() and realloc() functions are
	  now required for the flex-based parser. Corrected the
	  --enable-GSTREAMER option. Corrected checking for requirements of
	  the flex-based parser.
	* src/imyp_spk.{c,h}, configure.ac, src/imypwrap.c, src/imyputil.c,
	  src/imyplay.h, src/Makefile.am, src/imypdos.asm: PC-speaker support.
	* README, doc/imyplay.txc, INSTALL, doc/imyplay.1: documentation update
	* dosfiles.txt: added the PC-speaker to be available under DOS.
	* src/imyp_cfg.hin: added a constant when compiling under DOS. Making
	  sys/select.h unavailable unedr DOS (as it should be).
	* src/imyp_fil.c (imyp_file_init): corrected compiling for non-ANSI-C
	  compilers.
	* dosdist.bat: checking the error code after important commands, added
	  optimization when compiling, converting line endings and file names
	  of the documents.
	* src/imypwrap.c (imyp_init_selected): corrected compiling for
	  non-ANSI-C compilers. Marked some parameters as unused when the
	  corresponding backends are not compiled.
	* src/imyplay.c (main): corrected compiling when the MIDI or FILE
	  backends are disabled.
	* src/Makefile.am: corrected the FILE backend condition
	* src/imypwrap.c (imyp_lib_init): marked some parameters as unused
	  when the corresponding backends are not compiled.
	* imyplay.spi: added the supported backends to the description

2011-10-06	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.6
	  A new, flex-generated parser for the melody files. Displaying
	  backend libraries' versions along with  imyplay's version. Raw
	  file output backend. Support for LibNetBlock and LibHideIP.
	* configure.ac: checking for flex for the new parser, added new
	  C compiler flags to check: -Wwrite-strings and -Waggregate-return.
	  Added raw file output option. Support for LibNetBlock and LibHideIP.
	* src/Makefile.am: added the flex-based scanner. Added raw file output
	  source codes to program sources.
	* src/imyplay.c: fix missing "const". Added missing '?' option.
	* src/imyparsf.l: the new flex-based scanner source.
	* src/imyputil.{c,h}: new file with utility functions: output system
	  name parsing (moved from imypwrap.c), case-insensitive string
	  compare (moved from imypwrap.c), common samples' generation (moved
	  from the Allegro, ALSA, AO, OSS and PulseAudio backends).
	* src/imyplay.c, src/wrappers.{c,h}: Added displaying the libraries'
	  versions along with the program's vesrion.
	* src/imyp_fil.{c,h}: raw file backend
	* src/{imyplay.h,imyplay.c,wrappers.c}: added an "IMYP_" prefix to
	  current library enumeration.
	* src/imyplay.c: Support for LibNetBlock and LibHideIP.
	* src/imyp_jck.c, src/imyp_por.c, src/imyp_sdl.c: fixed samples'
	  generation in case of small sampling frequencies or high tones.
	* dosdist.bat: moved file list to a separate file, dosfiles.txt, to
	  avoid DOS command line length limit of 128 characters.

2011-03-26	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.5
	  MIDI instrument number now selectable. Fixed some functions'
	  descriptions. Output sound system now selectable by command-line
	  and the program's name. GStreamer output. Run flawfinder, rats
	  and cppcheck on the code and fixed a few performance problems.
	* configure.ac: fixed double CFLAGS on compile.
	* README: added the glibc license block. Updated RPM creating.
	  Updated command-line options.
	* imyplay.spi: added README, COPYING, AUTHORS and ChangeLog
	  to the RPM package.
	* doc/imyplay.txc: updated RPM creating. Updated command-line options.
	* doc/imyplay.1: Updated command-line options.
	* src/imyparse.{c,h}: separate files for parsing melody files with
	  simplified code.
	* src/imyparse.c (imyp_play_file): Errors displayed in more cases of
	  unknown tokens in the IMY file.
	* src/imyplay.c, src/imywrap.{c,h}, src/imyp_mid.{c,h}: MIDI
	  instrument number now selectable.
	* src/imyplay.c, src/imywrap.{c,h}: Output sound system now
	  selectable by command-line and the program's name.
	* src/imywrap.c, src/imyp_gst.{c,h}: GStreamer output.
	* README, doc/imyplay.txc, doc/imyplay.1, INSTALL: GStreamer support
	  information.

2010-06-27	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.4
	  Upgrade to newer autotools and gcc. Run flawfinder on the code and
	  changed some parts according to the result. Upgrade to gettext-0.17.
	  Corrected compiling for non-ANSI-C compilers.
	* imyplay.spi: fixed warnings displayed by rpmlint.
	* src/imyplay.h: renamed SAMPBUFSIZE, MIN, MAX, CURR_LIB, OCTAVES,
	  NOTES_PER_OCTAVE, error_type, show_error, sig_unk, err_msg_signal,
	  and notes to have the IMYP_/imyp_ prefix. Defined IMYP_ANSIC for
	  function prototypes.
	* configure.ac, configure: new command-line option --enable-MIDI to
	  enable/disable MIDI output (which is almost unaltered and thus
	  could cause problems with some compilers). New command-line option
	  --enable-EXEC to enable/disable the backend that executes the given
	  program instead of sound output.
	* src/Makefile.am, src/imypwrap.c: MIDI support now conditional.
	* src/imyp_jck.c: replaced free() with jack_free() and thus removed
	  including the stdlib and malloc header files. Verified compiling
	  against JACK2 header files. Verified working with JACK2 daemon.
	* src/imyp_jck.c, src/imyp_sdl.c, src/imyp_por.c: zero-out static
	  data structures on init. Decreasing the buffer index only when the
	  tone frequency was greater than zero, setting it to zero otherwise.
	  Synchronizing the callback functions to avoid zeroing the tone
	  frequency inside the loops.
	* src/imyp_mid.c: fixed the duration of notes and pauses.
	* src/imyp_exe.c: a new backend that executes a given program instead
	  of sound output.
	* src/imypwrap.c, src/imyplay.c, src/imyp_sig.c: EXEC backend support.
	* src/imyp_sdl.c: fixed signed/unsigned samples.
	* src/imyp_por.c (imyp_portaudio_play_tune): corrected closing the
	  audio stream.
	* src/imyp_all.c (imyp_all_pause): use select() if available.
	* src/imyp_als.c (imyp_alsa_play_tune): corrected filling the buffer.
	* src/imyp_ao.c (imyp_ao_play_tune): corrected filling the buffer.
	* src/imyp_oss.c (imyp_oss_play_tune): corrected filling the buffer.
	  Fixed signed/unsigned samples.
	* src/imyp_pul.c (imyp_pulse_play_tune): corrected filling the buffer.
	* src/imyp_sdl.c (imyp_sdl_play_tune): corrected initializing.
	* src/imyp_all.c (imyp_all_play_tune): corrected filling the buffer.
	* src/imyp_als.c (imyp_alsa_close): releasing the parameters' buffer.
	* src/imyp_mid.c (imyp_midi_init): making sure filename buffers are
	  zero-terminated.
	* src/imyp_als.c (imyp_alsa_init): fixed initializing the device.
	* src/imyplay.c: MIDI & EXEC backend command-line options now compiled
	  conditionally. Corrected parsing command-line options without getopt.

2009-06-27	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.3
	  SDL, ALSA, OSS, LIBAO, PortAudiov19, PulseAudio and JACK1 support.
	  Fixed endianess problem of 16-bit samples. Checking if the standard
	  output isn't NULL before printing text in the backends.
	* configure.ac: fixed: getopt.h no longer required, reacting on
	  parameters, check for off_t and size_t. Added "--enable-allegro",
	  "--enable-SDL", "--enable-ALSA", "--enable-LIBAO",
	  "--enable-PORTAUDIO", "--enable-PULSEAUDIO" and "--enable-JACK"
	  options.
	* configure.ac, src/Makefile.am: the program now really compiles
	  without the Allegro library.
	* imyplay.h: defining library constants, added IMYP_MAX_IMY_VOLUME,
	  added MIN() and MAX() macros.
	* imyp_sdl.{c,h}, imypwrap.c: SDL support.
	* imyplay.c, imyp_all.c, imyp_sdl.c: using IMYP_MAX_IMY_VOLUME.
	* imyp_als.{c,h}, imypwrap.c: ALSA support.
	* imyp_ao.{c,h}, imypwrap.c: LIBAO support.
	* imyp_por.{c,h}, imypwrap.c: PortAudiov19 support.
	* imyp_pul.{c,h}, imypwrap.c: PulseAudio support.
	* imyp_jck.{c,h}, imypwrap.c: JACK1 support.
	* imyplay.c (imyp_read_line): fixed getting the current file position.

2009-02-21	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.2
	  Added converting IMY files to MIDI format 1, with the command-line
	  option '--to-midi' (affects all the files on the command line).
	  Added thanks. Moved text displaying to library-dependent code.
	* configure.ac: The Allegro library is required only for playing.
	  IMYplay will compile without it. Added a check for the 'volatile'
	  type. Removed some unused tests. The string.h header is required,
	  getopt.h is not.
	* src/imyp_cfg.hin: portability corrections.
	* src/imyp_sig.c: using only defined signals. Fixed displaying.

2009-01-20	Bogdan Drozdowski <bogdandr@op.pl>

	* IMYplay version 0.1
	  Complies to the iMelody specification (doc/imelody.txt), uses the
	  Allegro library, captures signals. Modular structure allows easy
	  adding new sound libraries in the future. Full documentation
	  included.
