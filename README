This is the README file for imyplay, a program for playing iMelody
 ringtones (IMY files).

Read the info documentation (type 'info doc/imyplay.info') to get more
 information.

This program is used for playing iMelody ringtones (IMY files),
conforming to the iMelody specification, as written in doc/imelody.txt.
It can also convert IMY ringtones to MIDI files.

IMYplay can use the following libraries to produce sound: the Allegro game
library (http://alleg.sf.net), SDL (Simple DirectMedia Layer;
http://www.libsdl.org), ALSA (Advanced Linux Sound Architecture;
http://alsa-project.org), OSS (Open Sound System), libao
(http://xiph.org/ao/), PortAudiov19 (http://www.portaudio.com/), PulseAudio
(http://www.pulseaudio.org/), JACK1 (http://jackaudio.org/).


Author: Bogdan Drozdowski, bogdandr @ op . pl
License: GPLv3+

The program compiles on:
- Fedora Core 4 GNU/Linux, i686
- Mandriva 2008.1 GNU/Linux, i686
- OpenBSD 3.8, i586

Requirements for compiling the full version:

- a non-root account. Please, NEVER compile or 'make' anything as root.

- a working C compiler.

- development package for the C library (like glibc-devel and glibc-headers)
  The getopt.h header and the getopt_long() from it are required. The
  signal.h header is used to catch signals, and is optional. The translation
  headers (locale.h, libintl.h or other) are optional.

- the 'make' program

- if you want sound, not just MIDI conversion, a development package for one
  of the supported libraries (except OSS, which requires only the C library
  and system support). If you don't have any of these installed or available
  (check twice), then go to
   	http://alleg.sf.net/		- for the Allegro library
   	http://www.libsdl.org/		- for the SDL library
   	http://alsa-project.org/	- for the ALSA library
   	http://xiph.org/ao/		- for the AO library
   	http://www.portaudio.com/	- for the PortAudiov19 library
   	http://www.pulseaudio.org/	- for the PulseAudio library
   	http://jackaudio.org/		- for the JACK1 library

Type './configure' to configure the program for your system.

Type 'make' to compile the program.
To compile under DOS using DJGPP, find your GCC's "limits.h" file (NOT
 the standard one) and change the line
	#include "syslimits.h"
to
	#include "syslimit.h"
Then go to the src directory. Change @VERSION@ to the current version number
in the imyp_cfg.hin file and rename the file to imyp_cfg.h. Then run
	gcc -o imyplay.exe *.c -lalleg
The resulting imyplay.exe is the program to use.

Documentation will be compiled, if you have the 'makeinfo' program
 ('texinfo' package).
Translations will be compiled, if you have the 'gettext' package.

Type 'make install' to install the program. NOTE: 'make install' is
 NOT recommended. Create and install an rpm package instead, if possible.


Type 'info imyplay' to get help.

Syntax:

	imyplay [options] file.imy [...]

Command line options:

-d|--device <dev>	Try to use the given device (ALSA, OSS), driver ID
			(libao) or server name (JACK1, PulseAudio)
			sound output.
-h|--help		Print help
-l|--license		Print license information
--to-midi		Convert the given files to MIDI format
			(if the target file exists, it is deleted)
-V|--version		Print version number

=======================================================

Building an RPM package:

1) copy the imyplay.spc file to /usr/src/redhat/SPECS
2) copy the source package imyplay-XX.tar.gz to /usr/src/redhat/SOURCES
3) type
	rpmbuild -ba /usr/src/redhat/SPECS/imyplay.spc
4) get the rpms from /usr/src/redhat/RPMS/i386 and /usr/src/redhat/SRPMS

=======================================================

Translating the docs to your language:

 Type `msginit -i imyplay.pot -o XX.po', substituting your
2-letter language code for 'XX' (e.g. 'pl' or 'de'). This requires the
'gettext' package installed. You can manually copy the file
imyplay.pot to XX.po and manually add the following header, if
you wish.
 In the resulting XX.po file you have to fill in all the fields
marked with capital letters in the header:

# YOUR LANGUAGE translations for imyplay package.
# Copyright (C) 2009 Bogdan 'bogdro' Drozdowski
# This file is distributed under the same license as
# the imyplay package.
# YOUR FULL NAME <EMAILADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: imyplay VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2007-04-25 11:39+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAILADDRESS>\n"
"Language-Team: LANGUAGE <EMAILADDRESS>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

The rest of the file will contain messages from the program. Translate
them all and send me the resulting XX.po file.

Translating the documentation:
- info: simply change the imyplay.texi.in file
- man: Unpack the page using 'gunzip imyplay.1.gz' and
  translate the resulting imyplay.1 file.
